swagger: "2.0"

info:
  version: "1.0.0"
  title: "Users API"
  description: "A users API to register, login and get users."

schemes:
  - "http"
host: "localhost:3000"
basePath: "/users"

produces:
  - "text/html"
  - "application/json"

paths:
  /register:
    post:
      summary: Registers a user.
      description: Adds a new user in the database.
      parameters:
        - name: user
          in: body
          description: The user to register.
          schema:
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        200:
          description: User successfully registered.
          schema:
            required:
              - status
              - token
            properties:
              status:
                type: string
              token:
                type: string
        500:
          description: User couldn't have be registed.
  /login:
    post:
      summary: Logs in a user.
      description: Logs in an existing user.
      parameters:
        - name: user
          in: body
          description: The user to log in.
          schema:
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        200:
          description: User successfully logged in.
          schema:
            required:
              - status
              - token
            properties:
              status:
                type: string
              token:
                type: string
        500:
          description: User couldn't log in.
  /user:
    get:
      summary: Get a user by ID.
      description: Gets an existing user by ID.
      parameters:
        - name: ID
          in: query
          required: true
          description: User ID.
          type: integer
        - name: authorization
          description: JWT authorisation token.
          in: header
          type: string
          required: true
      responses:
        200:
          description: User returned.
          schema:
            required:
              - status
              - token
            properties:
              status:
                type: string
              user:
                type: integer
        400:
          description: Please log in.
          schema:
            required:
              - status
            properties:
              status:
                type: string
